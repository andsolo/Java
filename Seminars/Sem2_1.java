
// üìå –î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2.
// üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.

// public class Sem2_1 {
//     public static void main(String[] args) {
//         int n = 8;
//         char c1 = 'A';
//         char c2 = 'B';

//         System.out.println(SwapChars(n, c1, c2));
//         System.out.println(SwapCharsSB(n, c1, c2));
//     }

//     public static String SwapChars(int n, char c1, char c2) {
        
//         String str = " ";
//         for (int i = 0; i < n / 2; i++) {
//             str = str + c1 + c2;
//         }
//         return str;
//     }

//     public static String SwapCharsSB(int n, char c1, char c2) {
        
//         StringBuilder sb = new StringBuilder(n);
//         for (int i = 0; i < n / 2; i++) {
//             sb.append(c1).append(c2);
//         }
//         return sb.toString();
//     }   
// }
//-------------------------------------------------------------------
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Å–∂–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É.
// üìå –ü—Ä–∏–º–µ—Ä: –≤—Ö–æ–¥ aaaabbbcdd.
    
// public class Sem2_1 {

//     public static void main(String[] args) {
//         String str = "aaaabbbcdd";
//         System.out.println(compressStr(str));
//     }

//     public static String compressStr(String str){
//         int count = 1;
//         StringBuilder sb = new StringBuilder();
//         char currentChar = str.charAt(0);

//         for (int i = 0; i < str.length(); i++) {
//             if (str.charAt(i) == currentChar){
//                 count++;
//             }
//             else{
//                 sb.append(currentChar).append(count);
//                 currentChar = str.charAt(i);
//                 count = 1;
//             }
//         }
//         sb.append(currentChar).append(count);
//         return sb.toString();
//     }
// }
//-------------------------------------------------------------------
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (String) –∏
// –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç boolean –∑–Ω–∞—á–µ–Ω–∏–µ).

// public class Sem2_1 {
//     public static void main(String[] args) {
//         System.out.println(isPalindrom("–¥–æ–≤–æ–¥"));
//     }
//     static boolean isPalindrom(String str){
//         for (int i = 0; i < str.length() / 2; i++) {
//             if (str.charAt(i) != str.charAt(str.length() - 1 - i)){
//                 return false;
//             }
//         }
//         return true;
//     }
// }
//-------------------------------------------------------------------
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Å–æ—Å—Ç–∞–≤–∏—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ 100
// –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ÃÜ —Å–ª–æ–≤–∞ TEST –∏ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∑–∞–ø–∏—à–µ—Ç —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤
// –ø—Ä–æ—Å—Ç–æ–∏ÃÜ —Ç–µ–∫—Å—Ç–æ–≤—ã–∏ÃÜ —Ñ–∞–∏ÃÜ–ª, –æ–±—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.

// import java.io.File;
// import java.io.FileWriter;

// public class Sem2_1 {

//     public static void main(String[] args) {
//         String str = "TEST";
//         int n = 100;
//         String newStr = sringMaker(str, n);
//         String fileName = "text.txt";
//         writeToFile(newStr, fileName);
//     }

//     public static String sringMaker(String str, int n) {
//         StringBuilder sb = new StringBuilder();
//         for (int i = 0; i < n; i++) {
//             sb.append(str).append(" ");
//         }
//         return sb.toString();
//     }
    
//     public static void writeToFile(String str, String fileName) {
//         try(FileWriter fw = new FileWriter(fileName, true)){   // –µ—Å–ª–∏ —Å true, —Ç–æ —Ñ–∞–π–ª –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
//             fw.write(str);
//             fw.write(System.lineSeparator());   // –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
//             System.out.println("Succes");
//         } catch (Exception e){
//             System.err.println("Error, file is not written");
//         }
//     }
// }
//-------------------------------------------------------------------
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–∏ÃÜ –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–∏ÃÜ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–∏ÃÜ–ª.
// üìå –û–±—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–∏ÃÜ–ª.

// import java.io.File;
// import java.io.FileWriter;
// import java.io.IOException;
// import java.util.logging.FileHandler;
// import java.util.logging.Logger;
// import java.util.logging.SimpleFormatter;

// public class Sem2_1 {

//     private static Logger logger = Logger.getLogger(Sem2_1.class.getName()); // –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä (–ê–ü–ò)

//     public static void main(String[] args) {
//         configLogger();
//         String[] contentFolder = getFileList(System.getProperty("user.dir"));
//         writeArrayToFile(contentFolder, "contentFolder.txt");
//     }

//     static String[] getFileList(String folderName){      // –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–∏ÃÜ –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫
//         File currentFolder = new File(folderName);
//         return currentFolder.list();
//     }

//     static void configLogger(){                          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥ –ª–æ–≥–≥–µ—Ä–∞ –≤ —Ñ–∞–π–ª
//         try {
//             //logger.setUseParentHandleruseParentHandlers:s(false);             // –±–µ–∑ –≤—ã–≤–æ–¥–∞ –ª–æ–≥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å 
//             FileHandler fh = new FileHandler("log.txt", true);
//             logger.addHandler(fh);
//             SimpleFormatter sf = new SimpleFormatter();
//             fh.setFormatter(sf);
//         } catch (Exception e) {
//             e.printStackTrace();
//             logger.warning("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.");
//         }
//     }

//     static void writeArrayToFile(String[] arr, String fileName){    // –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–∏ÃÜ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–∏ÃÜ–ª
//         try (FileWriter fw = new FileWriter(fileName)){
//             for (String elem : arr) {
//                 fw.write(elem);
//                 fw.write(System.lineSeparator());  // –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
//             }
//             logger.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã.");
//         } catch (IOException ex) {
//             System.out.println(ex.getMessage());
//         }
//     }
// }